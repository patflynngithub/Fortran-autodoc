var tipuesearch = {"pages":[{"title":" FORD Fortran Autodoc exerciser ","text":"FORD Fortran Autodoc exerciser Exercising the FORD Fortran Autodoc program to be sure that it supports the autodocing of desired Fortran elements. Also show the available features of FORD and how to get them to work. Developer Info Patrick Flynn","tags":"home","loc":"index.html"},{"title":"write_main_fcn – FORD Fortran Autodoc exerciser","text":"function write_main_fcn(output) Write output from a main program function output   [in]    string to output Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: output What to output Return Value integer Just wanted a function. Return value not meaningful. Contents","tags":"","loc":"proc/write_main_fcn.html"},{"title":"write_main – FORD Fortran Autodoc exerciser","text":"subroutine write_main(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, intarray1, intarray2, real1, real2, real3, real4, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Write output from a main program subroutine output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: intarray1 (3) integer, intent(in), dimension(4) :: intarray2 real :: real1 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: realarray1 (5) real, intent(in), dimension(6) :: realarray2 character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=*), intent(in) :: output What to output Contents","tags":"","loc":"proc/write_main.html"},{"title":"write_a_mod_fcn – FORD Fortran Autodoc exerciser","text":"public  function write_a_mod_fcn(output) Write output from an a_mod module function Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: output What to output Return Value integer Just wanted a function. Return value not meaningful. Contents","tags":"","loc":"proc/write_a_mod_fcn.html"},{"title":"write_a_mod – FORD Fortran Autodoc exerciser","text":"public  subroutine write_a_mod(output) Write output from an a_mod module subroutine Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: output What to output Contents","tags":"","loc":"proc/write_a_mod.html"},{"title":"a_mod – FORD Fortran Autodoc exerciser","text":"Fortran module Contents Variables a_mod_int_value Functions write_a_mod_fcn Subroutines write_a_mod Variables Type Visibility Attributes Name Initial integer, public :: a_mod_int_value not used but want example of module-level variable Functions public  function write_a_mod_fcn (output) Write output from an a_mod module function Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: output What to output Return Value integer Just wanted a function. Return value not meaningful. Subroutines public  subroutine write_a_mod (output) Write output from an a_mod module subroutine Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: output What to output","tags":"","loc":"module/a_mod.html"},{"title":"main – FORD Fortran Autodoc exerciser","text":"Uses a_mod FORD autodoc exerciser program Contents Variables logical_value int_value bool1 bool2 bool3 bool4 boolarray1 boolarray2 int1 int2 int3 int4 intarray1 intarray2 real1 real2 real3 real4 realarray1 realarray2 a_char string1 string2 stringarray1 stringarray2 output Functions write_main_fcn Subroutines write_main Variables Type Attributes Name Initial logical :: logical_value pre-doc comment integer :: int_value post-doc comment logical :: bool1 logical :: bool1 logical :: bool2 logical :: bool2 logical :: bool3 logical :: bool3 logical :: bool4 logical :: bool4 logical :: boolarray1 (2) logical :: boolarray1(2) logical, dimension(3) :: boolarray2 logical, dimension(3) integer :: int1 integer :: int2 integer :: int3 integer :: int4 integer :: intarray1 (3) integer, dimension(4) :: intarray2 real :: real1 real :: real2 real :: real3 real :: real4 real :: realarray1 (5) real, dimension(6) :: realarray2 character :: a_char character(len=20) :: string1 character(len=21) :: string2 character(len=22), dimension(2) :: stringarray1 character(len=23) :: stringarray2 (3) character(len=10) :: output What to output Functions function write_main_fcn (output) Write output from a main program function Read more… Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: output What to output Return Value integer Just wanted a function. Return value not meaningful. Subroutines subroutine write_main (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, intarray1, intarray2, real1, real2, real3, real4, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Write output from a main program subroutine Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: intarray1 (3) integer, intent(in), dimension(4) :: intarray2 real :: real1 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: realarray1 (5) real, intent(in), dimension(6) :: realarray2 character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=*), intent(in) :: output What to output","tags":"","loc":"program/main.html"},{"title":"main.F90 – FORD Fortran Autodoc exerciser","text":"Contents Programs main Source Code main.F90 Source Code !> FORD autodoc exerciser program program main use a_mod !  use classes_mod implicit none !> pre-doc comment logical :: logical_value integer :: int_value !! post-doc comment #include \"local_vars.inc\" !   !> pre-doc comment !  type(my_class_extended_t) :: stored_num  !! post-doc comment !  if (stored_num%is_set()) then !     write (*,*) \"number stored\" !  else !     write (*,*) \"number not stored\" !  end if ! This is just a normal comment that will not be in autodoc ! Exercising a_mod module call write_main ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) int_value = write_main_fcn ( \"there!\" ) call write_a_mod ( \"Aphrodite!\" ) int_value = write_a_mod_fcn ( \"here!\" ) !   ! This is just a normal comment that will not be in autodoc !   ! Exercising types_mod module !   call stored_num%set_value(int_value) !   if (stored_num%is_set()) then !      write (*,*) \"number stored\" !   else !      write (*,*) \"number not stored\" !   end if contains !> Write output from a main program subroutine !! !!   output   [in]    string to output subroutine write_main ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) #include \"dummy_vars.inc\" write ( * , * ) \"write_main: \" , output end subroutine write_main !> Write output from a main program function !! !!   output   [in]    string to output function write_main_fcn ( output ) !> Just wanted a function. Return value not meaningful. integer :: write_main_fcn !> What to output character ( len =* ), intent ( in ) :: output write ( * , * ) \"write_main_fcn: \" , output write_main_fcn = 1 end function write_main_fcn end program main","tags":"","loc":"sourcefile/main.f90.html"},{"title":"a_module.F90 – FORD Fortran Autodoc exerciser","text":"Contents Modules a_mod Source Code a_module.F90 Source Code !> Fortran module module a_mod implicit none !> not used but want example of module-level variable integer :: a_mod_int_value contains !> Write output from an a_mod module subroutine subroutine write_a_mod ( output ) !> What to output character ( len =* ), intent ( in ) :: output write ( * , * ) \"write_a_mod: \" , output end subroutine write_a_mod !> Write output from an a_mod module function function write_a_mod_fcn ( output ) !> Just wanted a function. Return value not meaningful. integer :: write_a_mod_fcn !> What to output character ( len =* ), intent ( in ) :: output write ( * , * ) \"write_a_mod_fcn: \" , output write_a_mod_fcn = 2 end function write_a_mod_fcn end module a_mod","tags":"","loc":"sourcefile/a_module.f90.html"}]}