var tipuesearch = {"pages":[{"title":" FORD Fortran Autodoc exerciser ","text":"FORD Fortran Autodoc exerciser Exercising the FORD Fortran Autodoc program to be sure that it supports the autodocing of desired Fortran elements. Also show the available features of FORD and how to get them to work. Developer Info Patrick Flynn","tags":"home","loc":"index.html"},{"title":"main_dummy_vars_fcn1 – FORD Fortran Autodoc exerciser","text":"function main_dummy_vars_fcn1(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Main program function (return type defined in body) that exercises the dummy variables for autodoc program Defines return type in body of function output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Just wanted a function. Return value not meaningful. Contents","tags":"","loc":"proc/main_dummy_vars_fcn1.html"},{"title":"main_dummy_vars_fcn2 – FORD Fortran Autodoc exerciser","text":"function main_dummy_vars_fcn2(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Main program function (return type defined in first line) that exercises the dummy variables for autodoc program Defines return type in first line of function output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Contents","tags":"","loc":"proc/main_dummy_vars_fcn2.html"},{"title":"main_dummy_vars_fcn3 – FORD Fortran Autodoc exerciser","text":"function main_dummy_vars_fcn3(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) result(val) Main program function (return type and result name defined in first line) that exercises the dummy variables for autodoc program Defines return type and alternate result name  in first line of function output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Contents","tags":"","loc":"proc/main_dummy_vars_fcn3.html"},{"title":"main_dummy_vars_sub – FORD Fortran Autodoc exerciser","text":"subroutine main_dummy_vars_sub(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Main program subroutine that exercises the dummy variables for autodoc program output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Contents","tags":"","loc":"proc/main_dummy_vars_sub.html"},{"title":"a_mod_dummy_vars_fcn1 – FORD Fortran Autodoc exerciser","text":"public  function a_mod_dummy_vars_fcn1(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) a_mod module function (return type defined in body) that exercises the dummy variables for autodoc program Defines return type in body of function output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Just wanted a function. Return value not meaningful. Contents","tags":"","loc":"proc/a_mod_dummy_vars_fcn1.html"},{"title":"a_mod_dummy_vars_fcn2 – FORD Fortran Autodoc exerciser","text":"public  function a_mod_dummy_vars_fcn2(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) a_mod module function (return type defined in first line) that exercises the dummy variables for autodoc program Defines return type in first line of function output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Contents","tags":"","loc":"proc/a_mod_dummy_vars_fcn2.html"},{"title":"a_mod_dummy_vars_fcn3 – FORD Fortran Autodoc exerciser","text":"public  function a_mod_dummy_vars_fcn3(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) result(val) a_mod module function (return type and result name defined in first line) that exercises the dummy variables for autodoc program Defines return type and alternate result name  in first line of function output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Contents","tags":"","loc":"proc/a_mod_dummy_vars_fcn3.html"},{"title":"a_mod_dummy_vars_sub – FORD Fortran Autodoc exerciser","text":"public  subroutine a_mod_dummy_vars_sub(bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) a_mod module subroutine that exercises the dummy variables for autodoc program output   [in]    string to output Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Contents","tags":"","loc":"proc/a_mod_dummy_vars_sub.html"},{"title":"a_mod – FORD Fortran Autodoc exerciser","text":"Fortran module with module-level variable and procedures Uses kinds_mod Contents Variables a_mod_bool1 a_mod_bool2 a_mod_bool3 a_mod_bool4 a_mod_boolarray1 a_mod_boolarray2 a_mod_int1 a_mod_int2 a_mod_int3 a_mod_int4 a_mod_int5 a_mod_int6 a_mod_intarray1 a_mod_intarray2 a_mod_real1 a_mod_real2 a_mod_real3 a_mod_real4 a_mod_real5 a_mod_real6 a_mod_realarray1 a_mod_realarray2 a_mod_a_char a_mod_string1 a_mod_string2 a_mod_stringarray1 a_mod_stringarray2 Functions a_mod_dummy_vars_fcn1 a_mod_dummy_vars_fcn2 a_mod_dummy_vars_fcn3 Subroutines a_mod_dummy_vars_sub Variables Type Visibility Attributes Name Initial logical, public :: a_mod_bool1 logical :: a_mod_bool1 logical, public :: a_mod_bool2 logical :: a_mod_bool2 logical, public :: a_mod_bool3 logical :: a_mod_bool3 logical, public :: a_mod_bool4 logical :: a_mod_bool4 logical, public :: a_mod_boolarray1 (2) logical :: a_mod_boolarray1(2) logical, public, dimension(3) :: a_mod_boolarray2 logical, dimension(3) :: a_mod_boolarray2 integer, public :: a_mod_int1 integer :: a_mod_int1 integer, public :: a_mod_int2 integer :: a_mod_int2 integer, public :: a_mod_int3 integer :: a_mod_int3 integer, public :: a_mod_int4 integer :: a_mod_int4 integer(kind=8), public :: a_mod_int5 integer(8) :: a_mod_int5 integer(kind=long), public :: a_mod_int6 integer(kind=long) :: a_mod_int6 integer, public :: a_mod_intarray1 (3) integer :: a_mod_intarray1(3) integer, public, dimension(4) :: a_mod_intarray2 integer, dimension(4) :: a_mod_intarray2 real, public :: a_mod_real1 real :: a_mod_real1 real, public :: a_mod_real2 real :: a_mod_real2 real, public :: a_mod_real3 real :: a_mod_real3 real, public :: a_mod_real4 real :: a_mod_real4 real(kind=8), public :: a_mod_real5 real(8) :: a_mod_real5 real(kind=dp), public :: a_mod_real6 real(kind=dp) :: a_mod_real6 real, public :: a_mod_realarray1 (5) real :: a_mod_realarray1(5) real, public, dimension(6) :: a_mod_realarray2 real, dimension(6) :: a_mod_realarray2 character, public :: a_mod_a_char character :: a_mod_a_char character(len=20), public :: a_mod_string1 character(20) :: a_mod_string1 character(len=21), public :: a_mod_string2 character(21) :: a_mod_string2 character(len=22), public, dimension(2) :: a_mod_stringarray1 character(22), dimension(2) :: a_mod_stringarray1 character(len=23), public :: a_mod_stringarray2 (3) character(len=23) :: a_mod_stringarray2(3) Functions public  function a_mod_dummy_vars_fcn1 (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) a_mod module function (return type defined in body) that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Just wanted a function. Return value not meaningful. public  function a_mod_dummy_vars_fcn2 (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) a_mod module function (return type defined in first line) that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer public  function a_mod_dummy_vars_fcn3 (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) result(val) a_mod module function (return type and result name defined in first line) that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Subroutines public  subroutine a_mod_dummy_vars_sub (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) a_mod module subroutine that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output","tags":"","loc":"module/a_mod.html"},{"title":"kinds_mod – FORD Fortran Autodoc exerciser","text":"Fortran kinds module Contents Variables long dp Variables Type Visibility Attributes Name Initial integer, public, parameter :: long = 8 integer, public, parameter :: dp = kind(1.d0)","tags":"","loc":"module/kinds_mod.html"},{"title":"main – FORD Fortran Autodoc exerciser","text":"Uses kinds_mod a_mod FORD autodoc exerciser program Contents Variables logical_value int_value real_value bool1 bool2 bool3 bool4 boolarray1 boolarray2 int1 int2 int3 int4 int5 int6 intarray1 intarray2 real1 real2 real3 real4 real5 real6 realarray1 realarray2 a_char string1 string2 stringarray1 stringarray2 Functions main_dummy_vars_fcn1 main_dummy_vars_fcn2 main_dummy_vars_fcn3 Subroutines main_dummy_vars_sub Variables Type Attributes Name Initial logical :: logical_value pre-doc comment integer :: int_value post-doc comment real :: real_value pre-doc comment\npost-doc comment logical :: bool1 logical :: bool1 logical :: bool2 logical :: bool2 logical :: bool3 logical :: bool3 logical :: bool4 logical :: bool4 logical :: boolarray1 (2) logical :: boolarray1(2) logical, dimension(3) :: boolarray2 logical, dimension(3) :: boolarray2 integer :: int1 integer :: int1 integer :: int2 integer :: int2 integer :: int3 integer :: int3 integer :: int4 integer :: int4 integer(kind=8) :: int5 integer(8) :: int5 integer(kind=long) :: int6 integer(kind=long) :: int6 integer :: intarray1 (3) integer :: intarray1(3) integer, dimension(4) :: intarray2 integer, dimension(4) :: intarray2 real :: real1 real :: real1 real :: real2 real :: real2 real :: real3 real :: real3 real :: real4 real :: real4 real(kind=8) :: real5 real(8) :: real5 real(kind=dp) :: real6 real(kind=dp) :: real6 real :: realarray1 (5) real :: realarray1(5) real, dimension(6) :: realarray2 real, dimension(6) :: realarray2 character :: a_char character :: a_char character(len=20) :: string1 character(20) :: string1 character(len=21) :: string2 character(21) :: string2 character(len=22), dimension(2) :: stringarray1 character(22), dimension(2) :: stringarray1 character(len=23) :: stringarray2 (3) character(len=23) :: stringarray2(3) Functions function main_dummy_vars_fcn1 (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Main program function (return type defined in body) that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Just wanted a function. Return value not meaningful. function main_dummy_vars_fcn2 (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Main program function (return type defined in first line) that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer function main_dummy_vars_fcn3 (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) result(val) Main program function (return type and result name defined in first line) that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output Return Value integer Subroutines subroutine main_dummy_vars_sub (bool1, bool2, bool3, bool4, boolarray1, boolarray2, int1, int2, int3, int4, int5, int6, intarray1, intarray2, real1, real2, real3, real4, real5, real6, realarray1, realarray2, a_char, string1, string2, stringarray1, stringarray2, output) Main program subroutine that exercises the dummy variables for autodoc program Read more… Arguments Type Intent Optional Attributes Name logical :: bool1 logical :: bool1 logical, intent(in) :: bool2 logical, intent(in) :: bool2 logical, intent(out) :: bool3 logical, intent(out) :: bool3 logical, intent(inout) :: bool4 logical, intent(inout) :: bool4 logical, intent(inout) :: boolarray1 (2) logical, intent(inout) :: boolarray1(2) logical, intent(in), dimension(3) :: boolarray2 logical, dimension(3), intent(in) :: boolarray2 integer :: int1 integer :: int1 integer, intent(in) :: int2 integer, intent(in) :: int2 integer, intent(out) :: int3 integer, intent(out) :: int3 integer, intent(inout) :: int4 integer, intent(inout) :: int4 integer(kind=8), intent(in) :: int5 integer(8), intent(in) :: int5 integer(kind=long), intent(in) :: int6 integer(kind=long), intent(in) :: int6 integer, intent(inout) :: intarray1 (3) integer, intent(inout) :: intarray1(3) integer, intent(in), dimension(4) :: intarray2 integer, dimension(4), intent(in) :: intarray2 real :: real1 real :: real1 real, intent(in) :: real2 real, intent(in) :: real2 real, intent(out) :: real3 real, intent(out) :: real3 real, intent(inout) :: real4 real, intent(inout) :: real4 real(kind=8), intent(in) :: real5 real(8), intent(in) :: real5 real(kind=dp), intent(in) :: real6 real(kind=dp), intent(in) :: real6 real, intent(inout) :: realarray1 (5) real, intent(inout) :: realarray1(5) real, intent(in), dimension(6) :: realarray2 real, dimension(6), intent(in) :: realarray2 character, intent(in) :: a_char character, intent(in) :: a_char character(len=20), intent(in) :: string1 character(20), intent(in) :: string1 character(len=21), intent(out) :: string2 character(21), intent(out) :: string2 character(len=22), intent(inout), dimension(2) :: stringarray1 character(22), dimension(2), intent(inout) :: stringarray1 character(len=23), intent(inout) :: stringarray2 (3) character(len=23), intent(inout) :: stringarray2(3) character(len=*), intent(in) :: output What to output\ncharacter(len=*), intent(in) :: output","tags":"","loc":"program/main.html"},{"title":"main.F90 – FORD Fortran Autodoc exerciser","text":"Contents Programs main Source Code main.F90 Source Code !> FORD autodoc exerciser program program main use kinds_mod use a_mod !  use classes_mod implicit none !> pre-doc comment logical :: logical_value integer :: int_value !! post-doc comment !> pre-doc comment real :: real_value !! post-doc comment logical :: bool1 !! logical :: bool1 logical :: bool2 !! logical :: bool2 logical :: bool3 !! logical :: bool3 logical :: bool4 !! logical :: bool4 logical :: boolarray1 ( 2 ) !! logical :: boolarray1(2) logical , dimension ( 3 ) :: boolarray2 !! logical, dimension(3) :: boolarray2 integer :: int1 !! integer :: int1 integer :: int2 !! integer :: int2 integer :: int3 !! integer :: int3 integer :: int4 !! integer :: int4 integer ( 8 ) :: int5 !! integer(8) :: int5 integer ( kind = long ) :: int6 !! integer(kind=long) :: int6 integer :: intarray1 ( 3 ) !! integer :: intarray1(3) integer , dimension ( 4 ) :: intarray2 !! integer, dimension(4) :: intarray2 real :: real1 !! real :: real1 real :: real2 !! real :: real2 real :: real3 !! real :: real3 real :: real4 !! real :: real4 real ( 8 ) :: real5 !! real(8) :: real5 real ( kind = dp ) :: real6 !! real(kind=dp) :: real6 real :: realarray1 ( 5 ) !! real :: realarray1(5) real , dimension ( 6 ) :: realarray2 !! real, dimension(6) :: realarray2 character :: a_char !! character :: a_char character ( 20 ) :: string1 !! character(20) :: string1 character ( 21 ) :: string2 !! character(21) :: string2 character ( 22 ), dimension ( 2 ) :: stringarray1 !! character(22), dimension(2) :: stringarray1 character ( len = 23 ) :: stringarray2 ( 3 ) !! character(len=23) :: stringarray2(3) !   !> pre-doc comment !  type(my_class_extended_t) :: stored_num  !! post-doc comment !  if (stored_num%is_set()) then !     write (*,*) \"number stored\" !  else !     write (*,*) \"number not stored\" !  end if ! ------------------------------------------- ! ! Main program procedure calls ! ! This is just a normal comment that will not be in autodoc call main_dummy_vars_sub ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"Hello\" ) ! This is just a normal comment that will not be in autodoc int_value = main_dummy_vars_fcn1 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"there.\" ) ! This is just a normal comment that will not be in autodoc int_value = main_dummy_vars_fcn2 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"How\" ) ! This is just a normal comment that will not be in autodoc int_value = main_dummy_vars_fcn3 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"are\" ) ! ------------------------------------------- ! ! a_mod module procedure calls ! ! This is just a normal comment that will not be in autodoc call a_mod_dummy_vars_sub ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"you\" ) ! This is just a normal comment that will not be in autodoc int_value = a_mod_dummy_vars_fcn1 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"today?\" ) ! This is just a normal comment that will not be in autodoc int_value = a_mod_dummy_vars_fcn2 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"What's\" ) ! This is just a normal comment that will not be in autodoc int_value = a_mod_dummy_vars_fcn3 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & \"up?\" ) !   ! This is just a normal comment that will not be in autodoc !   ! Exercising types_mod module !   call stored_num%set_value(int_value) !   if (stored_num%is_set()) then !      write (*,*) \"number stored\" !   else !      write (*,*) \"number not stored\" !   end if contains !> Main program subroutine that exercises the dummy variables for autodoc program !! !!   output   [in]    string to output subroutine main_dummy_vars_sub ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) implicit none #include \"dummy_vars.inc\" write ( * , * ) \"main_dummy_vars_sub: \" , output end subroutine main_dummy_vars_sub !> Main program function (return type defined in body) that exercises the dummy variables for autodoc program !! !! Defines return type in body of function !! !!   output   [in]    string to output function main_dummy_vars_fcn1 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) implicit none !> Just wanted a function. Return value not meaningful. integer :: main_dummy_vars_fcn1 #include \"dummy_vars.inc\" write ( * , * ) \"main_dummy_vars_fcn1: \" , output main_dummy_vars_fcn1 = 1 end function main_dummy_vars_fcn1 !> Main program function (return type defined in first line) that exercises the dummy variables for autodoc program !! !! Defines return type in first line of function !! !!   output   [in]    string to output integer function main_dummy_vars_fcn2 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) implicit none #include \"dummy_vars.inc\" write ( * , * ) \"main_dummy_vars_fcn2: \" , output main_dummy_vars_fcn2 = 2 end function main_dummy_vars_fcn2 !> Main program function (return type and result name defined in first line) that exercises the dummy variables for autodoc program !! !! Defines return type and alternate result name  in first line of function !! !!   output   [in]    string to output integer function main_dummy_vars_fcn3 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) result ( val ) implicit none #include \"dummy_vars.inc\" write ( * , * ) \"main_dummy_vars_fcn3: \" , output val = 3 end function main_dummy_vars_fcn3 end program main","tags":"","loc":"sourcefile/main.f90.html"},{"title":"a_mod.F90 – FORD Fortran Autodoc exerciser","text":"Contents Modules a_mod Source Code a_mod.F90 Source Code !> Fortran module with module-level variable and procedures module a_mod use kinds_mod implicit none complex , private :: a_private_variable logical :: a_mod_bool1 !! logical :: a_mod_bool1 logical :: a_mod_bool2 !! logical :: a_mod_bool2 logical :: a_mod_bool3 !! logical :: a_mod_bool3 logical :: a_mod_bool4 !! logical :: a_mod_bool4 logical :: a_mod_boolarray1 ( 2 ) !! logical :: a_mod_boolarray1(2) logical , dimension ( 3 ) :: a_mod_boolarray2 !! logical, dimension(3) :: a_mod_boolarray2 integer :: a_mod_int1 !! integer :: a_mod_int1 integer :: a_mod_int2 !! integer :: a_mod_int2 integer :: a_mod_int3 !! integer :: a_mod_int3 integer :: a_mod_int4 !! integer :: a_mod_int4 integer ( 8 ) :: a_mod_int5 !! integer(8) :: a_mod_int5 integer ( kind = long ) :: a_mod_int6 !! integer(kind=long) :: a_mod_int6 integer :: a_mod_intarray1 ( 3 ) !! integer :: a_mod_intarray1(3) integer , dimension ( 4 ) :: a_mod_intarray2 !! integer, dimension(4) :: a_mod_intarray2 real :: a_mod_real1 !! real :: a_mod_real1 real :: a_mod_real2 !! real :: a_mod_real2 real :: a_mod_real3 !! real :: a_mod_real3 real :: a_mod_real4 !! real :: a_mod_real4 real ( 8 ) :: a_mod_real5 !! real(8) :: a_mod_real5 real ( kind = dp ) :: a_mod_real6 !! real(kind=dp) :: a_mod_real6 real :: a_mod_realarray1 ( 5 ) !! real :: a_mod_realarray1(5) real , dimension ( 6 ) :: a_mod_realarray2 !! real, dimension(6) :: a_mod_realarray2 character :: a_mod_a_char !! character :: a_mod_a_char character ( 20 ) :: a_mod_string1 !! character(20) :: a_mod_string1 character ( 21 ) :: a_mod_string2 !! character(21) :: a_mod_string2 character ( 22 ), dimension ( 2 ) :: a_mod_stringarray1 !! character(22), dimension(2) :: a_mod_stringarray1 character ( len = 23 ) :: a_mod_stringarray2 ( 3 ) !! character(len=23) :: a_mod_stringarray2(3) contains !> a_mod module subroutine that exercises the dummy variables for autodoc program !! !!   output   [in]    string to output subroutine a_mod_dummy_vars_sub ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) implicit none #include \"dummy_vars.inc\" write ( * , * ) \"a_mod_dummy_vars_sub: \" , output end subroutine a_mod_dummy_vars_sub !> a_mod module function (return type defined in body) that exercises the dummy variables for autodoc program !! !! Defines return type in body of function !! !!   output   [in]    string to output function a_mod_dummy_vars_fcn1 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) implicit none !> Just wanted a function. Return value not meaningful. integer :: a_mod_dummy_vars_fcn1 #include \"dummy_vars.inc\" write ( * , * ) \"a_mod_dummy_vars_fcn1: \" , output a_mod_dummy_vars_fcn1 = 1 end function a_mod_dummy_vars_fcn1 !> a_mod module function (return type defined in first line) that exercises the dummy variables for autodoc program !! !! Defines return type in first line of function !! !!   output   [in]    string to output integer function a_mod_dummy_vars_fcn2 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) implicit none #include \"dummy_vars.inc\" write ( * , * ) \"a_mod_dummy_vars_fcn2: \" , output a_mod_dummy_vars_fcn2 = 2 end function a_mod_dummy_vars_fcn2 !> a_mod module function (return type and result name defined in first line) that exercises the dummy variables for autodoc program !! !! Defines return type and alternate result name  in first line of function !! !!   output   [in]    string to output integer function a_mod_dummy_vars_fcn3 ( bool1 , bool2 , bool3 , bool4 , boolarray1 , boolarray2 , & int1 , int2 , int3 , int4 , int5 , int6 , intarray1 , intarray2 , & real1 , real2 , real3 , real4 , real5 , real6 , realarray1 , realarray2 , & a_char , string1 , string2 , stringarray1 , stringarray2 , & output ) result ( val ) implicit none #include \"dummy_vars.inc\" write ( * , * ) \"a_mod_dummy_vars_fcn3: \" , output val = 3 end function a_mod_dummy_vars_fcn3 end module a_mod","tags":"","loc":"sourcefile/a_mod.f90.html"},{"title":"kinds_mod.F90 – FORD Fortran Autodoc exerciser","text":"Contents Modules kinds_mod Source Code kinds_mod.F90 Source Code !> Fortran kinds module module kinds_mod integer , parameter :: long = 8 integer , parameter :: dp = kind ( 1.d0 ) end module kinds_mod","tags":"","loc":"sourcefile/kinds_mod.f90.html"}]}